import pygame
import random
import sys

width = 500
height = 500
cell_size = 50
board_width = width // cell_size
board_height = height // cell_size
bomb = 10


grid_color = (227, 168, 105)
text_color = (0, 0, 0)

pygame.init()
font = pygame.font.SysFont(None, 24)
screen = pygame.display.set_mode((width, height))
pygame.display.set_caption("Ë∏©Âú∞Èõ∑")

class Boo:
    def __init__(self, row, col, bomb):
        self.revealed = [[False] * col for _ in range(row)]
        self.row = row
        self.col = col
        self.bombs = bomb
        self.board = [[0] * col for _ in range(row)]
        #ÂüãÂú∞Èõ∑Êï∏ÂÄº
        self.place_bomb()
        #Ë®àÁÆóÂë®ÂúçÂüãÂú∞Èõ∑ÁöÑÊ≠•Êï∏
        self.calculate_number()
        self.game_over = False
    
    def place_bomb(self):
        placed = 0
        while placed < self.bombs:
            r = random.randint(0, self.row - 1)
            c = random.randint(0, self.col - 1)
            if self.board[r][c] != 'üí£':
               self.board[r][c] = 'üí£'
               placed += 1
    
    def calculate_number(self):
        for r in range(self.row):
            for c in range(self.col):
                if self.board[r][c] == 'üí£':
                    continue
                count = 0
                #ÊéÉÊèèÂë®Âúç8Ê†º[(-1,-1),(-1,0),(-1,1)
                #            (0,-1),(Ë¢´Èªû),(0, 1)
                #            (1,-1),(1, 0),(1, 1)]
                for dr in [-1, 0, 1]:
                    for dc in [-1, 0, 1]:
                        #Ë®àÁÆóÈÑ∞ËøëÊ†ºÂ≠êÁöÑÂ∫ßÊ®ô r + dr = row + ÂÅèÁßªÈáè
                        new_row, new_col = r + dr, c + dc
                        #Â¶ÇÊûúÂÄºÂú®Áï´Èù¢ÂÖß‰∫ÜË©±
                        if 0 <= new_row < self.row and 0 <= new_col < self.col:
                            #Â∞±ÊúÉÈ°ØÁ§∫Âú∞Èõ∑
                            if self.board[new_row][new_col] == 'üí£':
                                count += 1
                #Â∞áÂë®ÂúçÂú∞Èõ∑Êï∏ÈáèÂØ´ÂÖ•ÈÄôÊ†º
                self.board[r][c] = count

    def click(self, row, col):
        if not (0 <= row < self.row and 0 <= col < self.col):
            return True
        if self.revealed[row][col]:
            return True
        
        self.revealed[row][col] = True

        if self.board[row][col] == 'üí£':
            self.game_over = True
            return False
        
        #Âè™È°ØÁ§∫Ôºå‰∏çÊåÅÁ∫åÊåñÈñã(Âè™È°ØÁ§∫Êï∏Â≠óËÄå‰∏çÈÅ©ÊåñÈñã‰ªñ)
        elif self.board[row][col] > 0:
            return True
        
        elif self.board[row][col] == 0:
            for dr in [-1, 0, 1]:
                for dc in [-1, 0, 1]:
                    nr, nc = row + dr, col + dc
                    if (dr != 0 or dc != 0) and 0 <= nr < self.row and 0 <= nc < self.col:
                       if not self.revealed[nr][nc]:
                          self.click(nr, nc)
            return True
        
    def show(self, screen):
        for row in range(self.row):
            for col in range(self.col):
                rect = pygame.Rect(col * cell_size, row * cell_size
                                , cell_size, cell_size)
                pygame.draw.rect(screen, grid_color, rect, 1)

                if self.revealed[row][col]:
                    if self.board[row][col] == 'üí£':
                        text = font.render('üí£', True, (text_color))
                        screen.blit(text, rect.topleft)
                    elif self.board[row][col] > 0:
                        text = font.render(str(self.board[row][col]), True, (text_color))
                        screen.blit(text, rect.topleft)
                    elif self.game_over and self.board[row][col] == 'üí£':
                        text = font.render('üí£', True, (text_color))
                        screen.blit(text, rect.topleft)

def main():
    clock = pygame.time.Clock()
    game = Boo(board_height, board_width, bomb)

    while True:
        screen.fill((255, 255, 255))

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
            if event.type == pygame.MOUSEBUTTONDOWN and not game.game_over:
                mx, my = pygame.mouse.get_pos()
                row = my // cell_size
                col = mx // cell_size
                game.click(row, col)

        game.show(screen)
        pygame.display.flip()
        clock.tick(60)

if __name__ == '__main__':
    main()
                    
