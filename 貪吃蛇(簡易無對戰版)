import pygame
import sys
import random

pygame.init()

width = 800
height = 800

score = 0
screen = pygame.display.set_mode((height, width))
pygame.display.set_caption("貪吃蛇 PRO")

direction = "RIGHT"
change_to = direction

white = (255, 255, 255)
block = (0, 0, 0)
red = (255, 50, 50)
green = (50, 255, 50)
blue = (50, 50, 255)
yellow = (255, 255, 0)


snake_pos = [100, 50] #蛇頭位置
snake_body = [[100, 50], [90, 50], [80, 50]] #蛇身位置
snake_speed = 15

Length_snake_body = 3

clock = pygame.time.Clock()
font_style = pygame.font.SysFont("bahnschrift", 25)

food_list = []
num_food = 5
for _ in range(num_food):
    food_pos = [random.randint(0, (width // 10) - 1) * 10,
            random.randint(0, (height // 10) - 1) * 10]
    food_list.append(food_pos)
    food_spawn = True

hinder_list = []
num_hinder = 5
for _ in range(num_hinder):
    hinder_pos = [random.randint(0, (width // 10) - 1) * 10,
              random.randint(0, (height // 10) -1) * 10]
    hinder_list.append(hinder_pos)

running = True
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit()
        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_UP and direction != "DOWN":
                change_to = "UP"
            elif event.key == pygame.K_DOWN and direction != "UP":
                change_to = "DOWN"
            elif event.key == pygame.K_LEFT and direction != "RIGHT":
                change_to = "LEFT"
            elif event.key == pygame.K_RIGHT and direction != "LEFT":
                change_to = "RIGHT"
    direction = change_to
    if direction == "UP":
        snake_pos[1] = snake_pos[1] - 10
    if direction == "DOWN":
        snake_pos[1] = snake_pos[1] + 10
    if direction == "LEFT":
        snake_pos[0] = snake_pos[0] - 10
    if direction == "RIGHT":
        snake_pos[0] = snake_pos[0] + 10  

    snake_body.append(list(snake_pos))
    
    for food in food_list:
        if snake_pos == food:
           Length_snake_body = Length_snake_body + 1
           score = score + 1
           snake_speed = snake_speed + 1
           food_list.remove(food)
           food_pos = [random.randint(0, (width // 10) - 1) * 10 , 
                    random.randint(0, (height // 10) - 1) * 10]
           food_list.append(food_pos)
           break
    else:
        if len(snake_body) > Length_snake_body:
        #當長度大於原本設定的值，就把頭砍掉移到後面
           del snake_body[0]
    if not hinder_list:
        for _ in range (num_hinder):
            hinder_pos = [random.randint(0, (width // 10) - 1) * 10,
                      random.randint(0, (height // 10) - 1) * 10]
            hinder_list.append(hinder_pos)

    if not food_list:
        for _ in range(num_food):
            food_pos = [random.randint(0, (width // 10) - 1) * 10 , 
                    random.randint(0, (height // 10) - 1) * 10]
            food_list.append(food_pos)
    #snake_pos[0] < 0 (當頭超過左邊界) snake_pos[0] >= width(當頭超過右邊界)
    #snake_pos[1] < 0 (當頭超過上邊界) snake_pos[1] >= height(當頭超過上邊界)
    #snake_pos in snake_body[:-1] 蛇是否咬到自己 (蛇的身體從1~x所以用1: 但因為不包含最後一節所以用:-1)
    if snake_pos[0] < 0 or snake_pos[0] >= width or \
       snake_pos[1] < 0 or snake_pos[1] >= height or \
       snake_pos in hinder_list or \
       snake_pos in snake_body[:-1]:
       screen.fill(blue)
       message = font_style.render("Game Over", True, yellow)
       screen.blit(message, [width // 2 - 80, height // 2 - 20])
       pygame.display.update()
       pygame.time.delay(2000) 
       running = False

    screen.fill(blue)
    score_text = font_style.render(f"Score: {score}", True, white)
    screen.blit(score_text, (10, 10))
    for pos in snake_body:
        pygame.draw.rect(screen, green, pygame.Rect(pos[0], pos[1], 10, 10))
    for pos in food_list:    
        pygame.draw.rect(screen, red, pygame.Rect(pos[0], pos[1], 10, 10))
    for hinder in hinder_list:
        pygame.draw.rect(screen, block, pygame.Rect(hinder[0], hinder[1], 10, 10))
    pygame.display.update()
    clock.tick(snake_speed)

pygame.quit()
quit()
         
